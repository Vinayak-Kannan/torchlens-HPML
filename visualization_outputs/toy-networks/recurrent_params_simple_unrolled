// Computational graph for the feedforward sweep
digraph RecurrentParamsSimple {
	graph [label=<<B>RecurrentParamsSimple</B><br align='left'/>12 tensors total (2.7 KB)<br align='left'/>30 params total (360 B)<br align='left'/>> labeljust=left labelloc=t ordering=out rankdir=BT]
	node [ordering=out]
	input_1 [label=<<b>input_1</b><br/>5x5 (228 B)<br/>@input.x> color=black fillcolor="#98FB98" fontcolor=black ordering=out shape=oval style="filled,solid"]
	input_1 -> add_1_1 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	add_1_1 [label=<<b>add_1_1</b><br/>5x5 (228 B)> color=black fillcolor=white fontcolor=black ordering=out shape=oval style="filled,solid"]
	add_1_1 -> linear_1_2pass1 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	linear_1_2pass1 [label=<<b>linear_1_2:1</b><br/>5x5 (228 B)<br/>params: 5x5, x5<br/>@fc1:1> color=red fillcolor="#E6E6E6" fontcolor=red ordering=out shape=box style="filled,solid" tooltip="Failed to trace builtin operator
  Explanation: Dynamo does not know how to trace builtin operator `print` with argument types ['str'] (has_kwargs False)
  Hint: Avoid calling builtin `print` with argument types ['str']. Consider using an equivalent alternative function/method to `print`.
  Hint: If you are attempting to call a logging function (e.g. `print`), you can try adding it to `torch._dynamo.config.reorderable_logging_functions`.
  Hint: Please report an issue to PyTorch.

  Developer debug context: builtin print [<class 'torch._dynamo.variables.constant.ConstantVariable'>] False


User Stack:
/Users/taejunseo/Codes/torchlens-HPML/tests/wbreaks_example_models.py:819
"]
	linear_1_2pass1 -> mul_1_3pass1 [arrowsize=.7 color=red fontcolor=red labelfontsize=8 style=solid]
	mul_1_3pass1 [label=<<b>mul_1_3:1</b><br/>5x5 (228 B)> color=black fillcolor=white fontcolor=black ordering=out shape=oval style="filled,solid"]
	mul_1_3pass1 -> linear_1_2pass2 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	linear_1_2pass2 [label=<<b>linear_1_2:2</b><br/>5x5 (228 B)<br/>params: 5x5, x5<br/>@fc1:2> color=black fillcolor="#E6E6E6" fontcolor=black ordering=out shape=box style="filled,solid"]
	linear_1_2pass2 -> log_1_4pass1 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	log_1_4pass1 [label=<<b>log_1_4:1</b><br/>5x5 (228 B)> color=red fillcolor=white fontcolor=red ordering=out shape=oval style="filled,solid" tooltip="Failed to trace builtin operator
  Explanation: Dynamo does not know how to trace builtin operator `print` with argument types ['str'] (has_kwargs False)
  Hint: Avoid calling builtin `print` with argument types ['str']. Consider using an equivalent alternative function/method to `print`.
  Hint: If you are attempting to call a logging function (e.g. `print`), you can try adding it to `torch._dynamo.config.reorderable_logging_functions`.
  Hint: Please report an issue to PyTorch.

  Developer debug context: builtin print [<class 'torch._dynamo.variables.constant.ConstantVariable'>] False


User Stack:
/Users/taejunseo/Codes/torchlens-HPML/tests/wbreaks_example_models.py:823
"]
	log_1_4pass1 -> tan_1_5 [arrowsize=.7 color=red fontcolor=red labelfontsize=8 style=solid]
	tan_1_5 [label=<<b>tan_1_5</b><br/>5x5 (228 B)> color=black fillcolor=white fontcolor=black ordering=out shape=oval style="filled,solid"]
	tan_1_5 -> linear_1_2pass3 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	linear_1_2pass3 [label=<<b>linear_1_2:3</b><br/>5x5 (228 B)<br/>params: 5x5, x5<br/>@fc1:3> color=black fillcolor="#E6E6E6" fontcolor=black ordering=out shape=box style="filled,solid"]
	linear_1_2pass3 -> mul_1_3pass2 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	mul_1_3pass2 [label=<<b>mul_1_3:2</b><br/>5x5 (228 B)> color=black fillcolor=white fontcolor=black ordering=out shape=oval style="filled,solid"]
	mul_1_3pass2 -> linear_1_2pass4 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	linear_1_2pass4 [label=<<b>linear_1_2:4</b><br/>5x5 (228 B)<br/>params: 5x5, x5<br/>@fc1:4> color=black fillcolor="#E6E6E6" fontcolor=black ordering=out shape=box style="filled,solid"]
	linear_1_2pass4 -> log_1_4pass2 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	log_1_4pass2 [label=<<b>log_1_4:2</b><br/>5x5 (228 B)> color=black fillcolor=white fontcolor=black ordering=out shape=oval style="filled,solid"]
	log_1_4pass2 -> output_1 [arrowsize=.7 color=black fontcolor=black labelfontsize=8 style=solid]
	output_1 [label=<<b>output_1</b><br/>5x5 (228 B)<br/>@output> color=black fillcolor="#ff9999" fontcolor=black ordering=out shape=oval style="filled,solid"]
	{
		rank=sink
		output_1
	}
	subgraph cluster_fc1_pass1 {
		fillcolor=white label=<<B>@fc1:1</B><br align='left'/>(Linear)<br align='left'/>> labelloc=b penwidth=5.0 style="filled,dashed"
	}
	subgraph cluster_fc1_pass2 {
		fillcolor=white label=<<B>@fc1:2</B><br align='left'/>(Linear)<br align='left'/>> labelloc=b penwidth=5.0 style="filled,dashed"
	}
	subgraph cluster_fc1_pass3 {
		fillcolor=white label=<<B>@fc1:3</B><br align='left'/>(Linear)<br align='left'/>> labelloc=b penwidth=5.0 style="filled,dashed"
	}
	subgraph cluster_fc1_pass4 {
		fillcolor=white label=<<B>@fc1:4</B><br align='left'/>(Linear)<br align='left'/>> labelloc=b penwidth=5.0 style="filled,dashed"
	}
}
